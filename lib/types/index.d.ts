import HttpError from './HttpError';
export declare function BadRequest(code: string | number, message: string): HttpError;
export declare function UnAuthorized(code: string | number, message: string): HttpError;
export declare function PaymentRequired(code: string | number, message: string): HttpError;
export declare function Forbidden(code: string | number, message: string): HttpError;
export declare function NotFound(code: string | number, message: string): HttpError;
export declare function MethodNotAllowed(code: string | number, message: string): HttpError;
export declare function NotAcceptable(code: string | number, message: string): HttpError;
export declare function ProxyAuthemticationRequired(code: string | number, message: string): HttpError;
export declare function RequestTimeout(code: string | number, message: string): HttpError;
export declare function ConFlict(code: string | number, message: string): HttpError;
export declare function Gone(code: string | number, message: string): HttpError;
export declare function LengthRequired(code: string | number, message: string): HttpError;
export declare function PreConditionFailed(code: string | number, message: string): HttpError;
export declare function RequestEntityTooLarge(code: string | number, message: string): HttpError;
export declare function RequestURITooLong(code: string | number, message: string): HttpError;
export declare function UnSupportedMediaType(code: string | number, message: string): HttpError;
export declare function RequestedRangeNotSatisfiable(code: string | number, message: string): HttpError;
export declare function ExpectationFailed(code: string | number, message: string): HttpError;
export declare function ImATeapot(code: string | number, message: string): HttpError;
export declare function MisDirectedRequest(code: string | number, message: string): HttpError;
export declare function UnProcessableEntity(code: string | number, message: string): HttpError;
export declare function Locked(code: string | number, message: string): HttpError;
export declare function FailedDependency(code: string | number, message: string): HttpError;
export declare function UpgradeRequired(code: string | number, message: string): HttpError;
export declare function PreconditionRequired(code: string | number, message: string): HttpError;
export declare function TooManyRequests(code: string | number, message: string): HttpError;
export declare function RequestHeaderFieldsTooLarge(code: string | number, message: string): HttpError;
export declare function UnavailableForLegalReasons(code: string | number, message: string): HttpError;
export declare function InternalServerError(code: string | number, message: string): HttpError;
export declare function NotImplemented(code: string | number, message: string): HttpError;
export declare function BadGateway(code: string | number, message: string): HttpError;
export declare function ServiceUnavailable(code: string | number, message: string): HttpError;
export declare function GatewayTimeout(code: string | number, message: string): HttpError;
export declare function HttpVersionNotSupported(code: string | number, message: string): HttpError;
export declare function VariantAlsoNegotiates(code: string | number, message: string): HttpError;
export declare function InsufficientStorage(code: string | number, message: string): HttpError;
export declare function LoopDetected(code: string | number, message: string): HttpError;
export declare function NotExtended(code: string | number, message: string): HttpError;
export declare function NetworkAuthenticationRequired(code: string | number, message: string): HttpError;
